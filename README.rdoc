= oauth-cli 
a simple CLI client to test your oauth API easily

== Installation
oauth-cli is packed as gem, install with:
 gem install oauth-cli


== Usage
[repl] oauthc [options] <method> <uri> [<body>]

options may be:
* profile: --profile=<profile> -> put a .yml file to ~/.oauthconfig
* connection data: --host=<host> --consumer_key=<consumer_key> --consumer_secret=<consumer_secret> --token=<token> --token_secret=<token_secret>
* if method it *post* or *put* and no body is provided, you're asked for input


== Examples
oauthc was originally developed to test the {Qype API}[http://www.qype.com/developers/api]. Run these examples agains it:

  post /feedbacks '<feedback><link href="http://api.qype.com/v1/reviews/66"  rel="http://schemas.qype.com/review"/><comment><![CDATA[This review contains offending text]]></comment></feedback>'
  post /places/31/checkins '<checkins><point>53.5505,9.93631</point></checkins>'
  get /positions/53.55224,9.999/recommended_places
  get /locators/de600-hamburg/feed
  get /badges
  get /users/tobiasb/badges
  get /places/31.json?expand=popular_checkins


== Hints
* use with repl gem for nice handling, see http://github.com/defunkt/repl
* make sure to have rlwrap installed, too: http://utopia.knoware.nl/~hlub/rlwrap1


== Todos
* save given keys to config
* better support for getting authkeys
* better readonly support
* set default content & mime type
* set body content type json/xml
* get rid of repl?
* json + xml syntax highlight -> awesome_print
* testing + better docs
* check oauth client, streamline!?

== FAQ

==== What's the difference to the client provided by oauth gem?
problem with oauth cli client provided with the gem is the lack of post request with body content as well as easy usage with repl to have proper CLI options


== Copyright
The MIT License

Copyright Â© 2010 RngTng, Tobias Bielohlawek

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


== More
Easy way to create your gem:
* http://buzaz.com/index.php/2010/01/03/how-to-build-a-ruby-gem
* http://railscasts.com/episodes/135-making-a-gem
* http://docs.rubygems.org/read/chapter/20
* http://rubygems.org
